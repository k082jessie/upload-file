
# Azure Databricks
configs = {"fs.azure.account.auth.type": "OAuth","fs.azure.account.oauth.provider.type":"org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider","fs.azure.account.oauth2.client.id": "cf446eaf-3099-4179-94e3-20b51bc4a78f","fs.azure.account.oauth2.client.secret": "SBoFq1TfYG2~Z1E_4N3i_ialkLs0bgN~ZU","fs.azure.account.oauth2.client.endpoint": "https://login.microsoftonline.com/e7c24d00-7479-4343-8247-0204699693e8/oauth2/token","fs.azure.createRemoteFileSystemDuringInitialization": "true"}

# Display name:
MyDemoApp

# Application (client) ID:
cf446eaf-3099-4179-94e3-20b51bc4a78f

# Directory (tenant) ID:
e7c24d00-7479-4343-8247-0204699693e8

# Client Secret Value:
SBoFq1TfYG2~Z1E_4N3i_ialkLs0bgN~ZU

# Storage Account儲存體帳戶(Resource Group資源群組):
dllakedemo(Training_RG)

# Storage Container:
databricks


# Mount ADLS Gen2:
dbutils.fs.mount(source = "abfss://databricks@dllakedemo.dfs.core.windows.net/sample/data",mount_point = "/mnt/samples員工編號",extra_configs = configs)


# 匯入相關套件
from sklearn import preprocessing
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from matplotlib import pyplot
from pandas.plotting import scatter_matrix
import pandas as pd

# 匯入資料到 Pandas dataframe
df=pd.read_csv("/dbfs/mnt/samples員工編號/iris.csv")


# 顯示資料
df.shape
df.head()
df.tail()
df.dtypes
df.info()
df.describe()
df['species'].unique()


# 資料作圖
scatter_matrix(df,figsize=(8,6))
pyplot.show()

# 建立 species 顏色
le = preprocessing.LabelEncoder()
df['species_le'] = le.fit_transform(df['species'])
df['color'] = df['species_le'].map({0:'r',1:'g',2:'b'})

# 繪製散佈圖
df.plot.scatter(x='sepal_length',y='sepal_width',c=df['color'])

# 分割資料
array = df.values
X = array[:,0:4]# 特徵值
y = array[:,4]# 標籤值

# 將資料分為訓練與測試兩組
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=1)

# 建立模型
lrm=LogisticRegression(solver='lbfgs')

# 訓練模型
lrm.fit(X_train, y_train)

# 測試模型
y_pred = lrm.predict(X_test)

# 比較結果
print(y_pred)# 預測值
print(y_test)# 實際值

# 顯示精確度
lrm.score(X_test,y_test)


# 使用 PySpark DataFrame
sdf = spark.read.csv("/mnt/samples員工編號/iris.csv", sep=",", inferSchema="true", header="true")

# 建立 View
sdf.createOrReplaceTempView('iris')

# 執行 SQL 查詢
spark.sql('select count(species) from iris group by species').show()


%sqlselect count(species) from iris group by species
# 使用 sql magic 

# 卸載掛接點
dbutils.fs.unmount("/mnt/samples員工編號")




